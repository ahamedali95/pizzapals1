{"version":3,"sources":["assets/images/pizza3.png","actions/index.js","components/presentationalComponents/Header.js","constants.js","services/createPizza.js","components/presentationalComponents/NewPizzaForm.js","utilities.js","components/presentationalComponents/Pizza.js","components/presentationalComponents/PizzaList.js","services/getPizzas.js","components/presentationalComponents/Error.js","components/containerComponents/App.js","reducers/index.js","components/containerComponents/Login.js","components/containerComponents/Logout.js","index.js"],"names":["module","exports","setPizzas","data","type","payload","addPizza","setIsPizzaLoaderShown","value","addAlert","removeAlert","Header","className","src","pizza","alt","pizzaFetchFailureAlert","id","color","header","list","pizzaSubmissionSuccessAlert","pizzaSubmissionFailureAlert","logoutSuccessAlert","employees","createPizza","a","axios","post","apiBaseUrl","response","NewPizzaForm","props","state","isLoaderShown","ingredient1","ingredient2","name","style","creator","imageURL","invalidFields","autoBind","this","history","push","event","setState","prevState","preventDefault","performValidation","length","fields","$fields","map","field","includes","toUpperCase","slice","getPizzaFormAlertsList","prePizzaCreationProcess","key","callback","callbackArgs","handleLoaderToggle","formattedData","ingredients","postPizzaCreationProcess","clearForm","setTimeout","Form","Button","negative","onClick","Segment","inverted","loading","onSubmit","Group","inline","widths","Input","error","fluid","label","placeholder","onChange","Field","control","Select","options","generateOptions","disabled","positive","employeeName","idx","text","React","Component","connect","dispatch","Pizza","ingredient","join","Card","Image","Content","Meta","Description","split","extra","moment","createdTime","format","pizzas","isPizzaLoaderShown","console","log","Loader","active","pizzaObj","getPizzas","get","alerts","alert","Message","uuid","App","prePizzaFetchProcess","postPizzaFetchProcess","sortedPizzasByCreatedTime","sort","pizza1","pizza2","Date","initialState","Object","freeze","reducer","action","filter","Login","userName","password","size","Logout","content","icon","store","createStore","applyMiddleware","thunk","logger","ReactDOM","render","path","exact","document","getElementById"],"mappings":"mGAAAA,EAAOC,QAAU,IAA0B,oC,mGCM3CD,EAAOC,QAAU,CACfC,UAPgB,SAAAC,GAAI,MAAK,CAAEC,KAAM,aAAcC,QAASF,IAQxDG,SAPe,SAAAH,GAAI,MAAK,CAAEC,KAAM,YAAaC,QAASF,IAQtDI,sBAP4B,SAAAC,GAAK,MAAK,CAAEJ,KAAM,4BAA6BC,QAASG,IAQpFC,SAPe,SAAAD,GAAK,MAAK,CAAEJ,KAAM,YAAaC,QAASG,IAQvDE,YAPkB,SAAAF,GAAK,MAAK,CAAEJ,KAAM,eAAgBC,QAASG,M,0PCUhDG,EAXA,WACb,OACE,oCACE,4BAAQC,UAAU,cAChB,yBAAKC,IAAKC,IAAOF,UAAU,WAAWG,IAAI,SAC1C,wBAAIH,UAAU,YAAd,iB,mECNKI,EACJ,CACLC,GAAI,4BACJC,MAAO,MACPC,OAAQ,kDACRC,KAAM,IAIGC,EACJ,CACLJ,GAAI,iCACJC,MAAO,QACPC,OAAQ,8BACRC,KAAM,IAIGE,EACJ,CACLL,GAAI,iCACJC,MAAO,MACPC,OAAQ,kDACRC,KAAM,IAIGG,EACJ,CACLN,GAAI,uBACJC,MAAO,QACPC,OAAQ,8BACRC,KAAM,IAKGI,EAAoB,CAC/B,eACA,cACA,aACA,iBACA,gBACA,kBACA,cACA,cACA,cACA,uBACA,qB,iBCrCaC,EAVE,uCAAG,WAAMX,GAAN,eAAAY,EAAA,+EAEOC,IAAMC,KAAKC,sCAA+Bf,GAFjD,cAEVgB,EAFU,yBAITA,EAAS3B,MAJA,yDAMT,MANS,yDAAH,sDCMX4B,E,YACJ,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAEDC,MAAQ,CACXC,eAAe,EACfpB,MAAO,CACLqB,YAAa,GACbC,YAAa,GACbC,KAAM,GACNC,MAAO,GACPC,QAAS,GACTC,SAAU,IAEZC,cAAe,IAGjBC,IAAS,gBAhBQ,E,oFAoBlBC,KAAKX,MAAMvB,SAASc,K,gCAInBoB,KAAKX,MAAMY,QAAQC,KAAK,Y,+BAGjBC,E,GAAyB,IAAhBT,EAAe,EAAfA,KAAM7B,EAAS,EAATA,MACtBmC,KAAKI,UAAS,SAAAC,GACZ,MAAO,CACLlC,MAAM,eACDkC,EAAUlC,MADV,eAEFuB,EAAO7B,U,+BAMPsC,GAAQ,IAAD,OACdA,EAAMG,iBACN,IAAMR,EAAgBE,KAAKO,oBAEvBT,EAAcU,OAChBR,KAAKI,SAAS,CAAEN,kBAAiB,WAC/B,EAAKT,MAAMtB,YAAY,mCACvB,EAAKsB,MAAMtB,YAAY,kCACvB,EAAKsB,MAAMtB,YAAY,kCACvB,EAAKsB,MAAMvB,SCzDmB,SAAA2C,GACpC,IAAMC,EAAU,CAAC,cAAe,cAAe,OAAQ,QAAS,WAShE,MAAO,CACLpC,GAAI,kCACJC,MAAO,MACPC,OAAQ,6CACRC,KAZgBgC,EAAOE,KAAI,SAAAC,GAC3B,OAAIF,EAAQG,SAASD,GACb,GAAN,OAAUA,EAAM,GAAGE,eAAnB,OAAmCF,EAAMG,MAAM,GAA/C,qFAEM,GAAN,OAAUH,EAAM,GAAGE,eAAnB,OAAmCF,EAAMG,MAAM,GAA/C,2FDmDsBC,CAAuBlB,QAG7CE,KAAKX,MAAMtB,YAAY,mCACvBiC,KAAKX,MAAMtB,YAAY,kCACvBiC,KAAKX,MAAMtB,YAAY,kCACvBiC,KAAKiB,6B,0CAKP,IAAMnB,EAAgB,GACd3B,EAAU6B,KAAKV,MAAfnB,MACFsC,EAAS,CAAC,cAAe,cAAe,OAAQ,QAAS,WAE/D,IAAK,IAAMS,KAAO/C,EAAO,CACvB,IAAMN,EAAQM,EAAM+C,IAEhBT,EAAOI,SAASK,MAAUrD,GAASA,EAAM2C,OAAS,KAEnC,aAARU,KAAwBrD,GAASA,EAAM2C,OAAS,QADzDV,EAAcI,KAAKgB,GAMvB,OAAOpB,I,yCAGUqB,EAAUC,GAC3BpB,KAAKI,UAAS,SAAAC,GAAS,MAAK,CAAEd,eAAgBc,EAAUd,kBAAkB,kBAAM4B,EAASC,Q,gDAIzFpB,KAAKqB,mBAAmBrB,KAAKlB,e,+JAIrBX,EAAU6B,KAAKV,MAAfnB,MAEFmD,EAAgB,CACpB5B,KAAMvB,EAAMuB,KACZC,MAAOxB,EAAMwB,MACbC,QAASzB,EAAMyB,QACfC,SAAU1B,EAAM0B,SAChB0B,YAAa,CAAC,CAAE7B,KAAMvB,EAAMqB,aAAe,CAAEE,KAAMvB,EAAMsB,e,SAExCX,EAAYwC,G,OAAzB9D,E,OACNwC,KAAKqB,mBAAmBrB,KAAKwB,yBAA0BhE,G,qJAGhCA,GAAO,IAAD,OACzBA,GACFwC,KAAKX,MAAMvB,SAASY,GACpBsB,KAAKX,MAAM1B,SAASH,GACpBwC,KAAKyB,YACLC,YAAW,kBAAM,EAAKrC,MAAMtB,YAAY,oCAAmC,MAE3EiC,KAAKX,MAAMvB,SAASa,K,kCAKtBqB,KAAKI,SAAS,CACZjC,MAAO,CACLqB,YAAa,GACbC,YAAa,GACbC,KAAM,GACNC,MAAO,GACPC,QAAS,GACTC,SAAU,IAEZC,cAAe,O,+BAQT,IAAD,SACyCE,KAAKV,MAA7CC,EADD,EACCA,cAAepB,EADhB,EACgBA,MAAO2B,EADvB,EACuBA,cAE9B,OACE,oCACE,yBAAK7B,UAAU,OACb,yBAAKA,UAAU,mBACb,kBAAC0D,EAAA,EAAKC,OAAN,CACE3D,UAAU,gBACV4D,UAAQ,EACRC,QAAS9B,KAAK8B,SAHhB,aASJ,kBAACC,EAAA,EAAD,CAASC,UAAQ,GACf,kBAACL,EAAA,EAAD,CACEK,UAAQ,EACRC,QAAS1C,EACT2C,SAAUlC,KAAKkC,UAEf,kBAACP,EAAA,EAAKQ,MAAN,CAAYC,QAAM,GAChB,2BAAOnE,UAAU,cACf,oDAGJ,kBAAC0D,EAAA,EAAKQ,MAAN,CAAYE,OAAO,SACjB,kBAACV,EAAA,EAAKW,MAAN,CACEC,MAAOzC,EAAce,SAAS,eAC9B2B,OAAK,EACLC,MAAM,kBACN/C,KAAK,cACLgD,YAAY,mBACZC,SAAU3C,KAAK2C,SACf9E,MAAOM,EAAMqB,cAEf,kBAACmC,EAAA,EAAKW,MAAN,CACEC,MAAOzC,EAAce,SAAS,eAC9B2B,OAAK,EACLC,MAAM,kBACN/C,KAAK,cACLgD,YAAY,oBACZC,SAAU3C,KAAK2C,SACf9E,MAAOM,EAAMsB,eAGjB,kBAACkC,EAAA,EAAKQ,MAAN,CAAYE,OAAO,SACjB,kBAACV,EAAA,EAAKW,MAAN,CACEC,MAAOzC,EAAce,SAAS,QAC9B2B,OAAK,EACLC,MAAM,OACN/C,KAAK,OACLgD,YAAY,OACZC,SAAU3C,KAAK2C,SACf9E,MAAOM,EAAMuB,OAEf,kBAACiC,EAAA,EAAKW,MAAN,CACEC,MAAOzC,EAAce,SAAS,SAC9B2B,OAAK,EACLC,MAAM,QACN/C,KAAK,QACLgD,YAAY,QACZC,SAAU3C,KAAK2C,SACf9E,MAAOM,EAAMwB,QAEf,kBAACgC,EAAA,EAAKiB,MAAN,CACEL,MAAOzC,EAAce,SAAS,WAC9B2B,OAAK,EACLK,QAASlB,IAAKmB,OACdL,MAAM,UACN/C,KAAK,UACLgD,YAAY,UACZ7E,MAAOM,EAAMyB,QACbmD,QAAS3D,EAAa4D,kBACtBL,SAAU,SAACxC,EAAD,OAAUT,EAAV,EAAUA,KAAM7B,EAAhB,EAAgBA,MAAhB,OAA4B,EAAK8E,SAASxC,EAAO,CAAET,OAAM7B,aAErE,kBAAC8D,EAAA,EAAKW,MAAN,CACEC,MAAOzC,EAAce,SAAS,YAC9B2B,OAAK,EACLC,MAAM,YACN/C,KAAK,WACLgD,YAAY,YACZC,SAAU3C,KAAK2C,SACf9E,MAAOM,EAAM0B,YAGjB,kBAAC8B,EAAA,EAAKC,OAAN,CACEqB,SAAU1D,EACV2D,UAAQ,GAFV,mB,yCA1FR,OAAOrE,EAAU8B,KAAI,SAACwC,EAAcC,GAAf,MAAwB,CAAClC,IAAKkC,EAAKvF,MAAOsF,EAAcE,KAAMF,U,GA5H5DG,IAAMC,WA2OlBC,cAAQ,MARI,SAACC,GAC1B,MAAO,CACL9F,SAAU,SAACH,GAAD,OAAWiG,EAAS9F,mBAASH,KACvCM,SAAU,SAAAD,GAAK,OAAI4F,EAAS3F,mBAASD,KACrCE,YAAa,SAAAF,GAAK,OAAI4F,EAAS1F,sBAAYF,QAIhC2F,CAAkCpE,G,6CErNlCsE,EA3BD,SAACrE,GAAW,IAChBlB,EAAUkB,EAAVlB,MACFoD,EAAcpD,EAAMoD,YAAYZ,KAAI,SAAAgD,GAAU,OAAIA,EAAWjE,QAAMkE,KAAK,OAE9E,OACE,kBAAC,WAAD,KACE,kBAACC,EAAA,EAAD,CAAM5F,UAAU,UACd,kBAAC6F,EAAA,EAAD,CACE5F,IAAKC,EAAM0B,SACX5B,UAAU,UAEZ,kBAAC4F,EAAA,EAAKE,QAAN,KACE,kBAACF,EAAA,EAAK7F,OAAN,KAAcG,EAAMuB,MACpB,kBAACmE,EAAA,EAAKG,KAAN,KACE,8BAAO7F,EAAMyB,UAEf,kBAACiE,EAAA,EAAKI,YAAN,8BAAqC9F,EAAMyB,QAAQsE,MAAM,KAAK,GAA9D,sBAEF,kBAACL,EAAA,EAAKE,QAAN,CAAcI,OAAK,GAAnB,2BAAyC5C,IACzC,kBAACsC,EAAA,EAAKE,QAAN,KACGK,IAAOjG,EAAMkG,aAAaC,OAAO,WCW7Bd,eAPS,SAAClE,GACvB,MAAO,CACLiF,OAAQjF,EAAMiF,OACdC,mBAAoBlF,EAAMkF,sBAIfhB,EA9BG,SAAAnE,GAEhB,OADAoF,QAAQC,IAAI,aAEV,yBAAKzG,UAAU,QACb,kBAAC8D,EAAA,EAAD,CAASC,UAAQ,GACf,kBAAC2C,EAAA,EAAD,CAAQC,OAAQvF,EAAMmF,qBAEpBnF,EAAMkF,OAAO/D,OACX,yBAAKvC,UAAU,qCAEXoB,EAAMkF,OAAO5D,KAAI,SAACkE,EAAUzB,GAC1B,OAAO,kBAAC,EAAD,CAAOlC,IAAKkC,EAAKjF,MAAO0G,QAKrC,UCRGC,EAVA,uCAAG,4BAAA/F,EAAA,+EAEQC,IAAM+F,IAAI7F,uCAFlB,cAETC,EAFS,yBAIRA,EAAS3B,MAJD,yDAMR,MANQ,yDAAH,qD,kBCuBAgG,eANS,SAAAlE,GACtB,MAAO,CACL0F,OAAQ1F,EAAM0F,UAIHxB,EArBD,SAAAnE,GACZ,OACEA,EAAM2F,OAAOrE,KAAI,SAAAsE,GACf,OACE,kBAACC,EAAA,EAAD,CACEhE,IAAKiE,cACL5G,MAAO0G,EAAM1G,MACbC,OAAQyG,EAAMzG,OACdC,KAAMwG,EAAMxG,aCHhB2G,G,4LAEFpF,KAAKqF,yB,6CAILrF,KAAKX,MAAMzB,uBAAsB,GACjCoC,KAAK8E,c,kKAIcA,I,OAAbtH,E,OACNwC,KAAKsF,sBAAsB9H,G,kJAGPA,GACpB,GAAIA,EAAM,CACRwC,KAAKX,MAAMzB,uBAAsB,GACjC,IAAM2H,EAA4B/H,EAAKgI,MAAK,SAACC,EAAQC,GAAT,OAAoB,IAAIC,KAAKD,EAAOrB,aAAe,IAAIsB,KAAKF,EAAOpB,gBAC/GrE,KAAKX,MAAM9B,UAAUgI,QAErBvF,KAAKX,MAAMzB,uBAAsB,GACjCoC,KAAKX,MAAMvB,SAASO,K,+BAKtB,OACE,yBAAKJ,UAAU,aACb,yBAAKA,UAAU,uBACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAcgC,QAASD,KAAKX,MAAMY,UAClC,kBAAC,EAAD,Y,GAjCQsD,aAgDHC,eAAQ,MARI,SAACC,GAC1B,MAAO,CACLlG,UAAW,SAAAC,GAAI,OAAKiG,EAASlG,oBAAUC,KACvCI,sBAAuB,SAAAC,GAAK,OAAI4F,EAAS7F,gCAAsBC,KAC/DC,SAAU,SAAAD,GAAK,OAAI4F,EAAS3F,mBAASD,QAI1B2F,CAAkC4B,I,UC1D3CQ,GAAeC,OAAOC,OAAO,CACjCvB,OAAQ,GACRC,oBAAoB,EACpBQ,OAAQ,KAoBKe,GAjBC,WAAiC,IAAhCzG,EAA+B,uDAAzBsG,GAAcI,EAAW,uCAC9C,OAAOA,EAAOvI,MACZ,IAAK,aACH,OAAO,eAAK6B,EAAZ,CAAmBiF,OAAQyB,EAAOtI,UACpC,IAAK,YACH,OAAO,eAAI4B,EAAX,CAAkBiF,OAAO,CAAEyB,EAAOtI,SAAV,oBAAsB4B,EAAMiF,WACtD,IAAK,4BACH,OAAO,eAAIjF,EAAX,CAAkBkF,mBAAoBwB,EAAOtI,UAC/C,IAAK,YACH,OAAO,eAAI4B,EAAX,CAAkB0F,OAAO,GAAD,oBAAM1F,EAAM0F,QAAZ,CAAoBgB,EAAOtI,YACrD,IAAK,eACH,OAAO,eAAI4B,EAAX,CAAkB0F,OAAQ1F,EAAM0F,OAAOiB,QAAO,SAAAhB,GAAK,OAAIA,EAAM3G,KAAO0H,EAAOtI,aAC7E,QACE,OAAO4B,ICVP4G,G,YACJ,WAAY7G,GAAQ,IAAD,8BACjB,4CAAMA,KAEDC,MAAQ,CACX6G,SAAU,GACVC,SAAU,GACVtG,cAAe,IAGjBC,IAAS,gBATQ,E,oFAajBC,KAAKX,MAAMtB,YAAY,qC,+BAGhBoC,E,GAAyB,IAAD,OAAfT,EAAe,EAAfA,KAAM7B,EAAS,EAATA,MACtBmC,KAAKI,SAAL,eACGV,EAAO7B,IACP,kBAAM4G,QAAQC,IAAI,EAAKpF,Y,+BAGnBa,GAAQ,IAAD,OACdA,EAAMG,iBACN,IAAMR,EAAgBE,KAAKO,oBAEvBT,EAAcU,OAChBR,KAAKI,SAAS,CACZN,kBACC,WACD,EAAKT,MAAMtB,YAAY,mCACvB,EAAKsB,MAAMvB,SPpBV,CACLQ,GAAI,kCACJC,MAAO,MACPC,OAAQ,6CACRC,KOgB+CqB,EPtBxBa,KAAI,SAAAC,GAAK,gBAAOA,EAAM,GAAGE,eAAhB,OAAgCF,EAAMG,MAAM,GAA5C,mCOyB9Bf,KAAKX,MAAMY,QAAQC,KAAK,e,0CAK1B,IAAMJ,EAAgB,GAKtB,OAHCE,KAAKV,MAAM6G,UAAYrG,EAAcI,KAAK,aAC1CF,KAAKV,MAAM8G,UAAYtG,EAAcI,KAAK,YAEpCJ,I,+BAGC,IAAD,EACuCE,KAAKV,MAA3C6G,EADD,EACCA,SAAUC,EADX,EACWA,SAAUtG,EADrB,EACqBA,cAE5B,OACE,yBAAK7B,UAAU,aACb,yBAAKA,UAAU,uBACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,yBAAKA,UAAU,8BACb,kBAAC8D,EAAA,EAAD,CAASC,UAAQ,GACf,kBAACL,EAAA,EAAD,CACEK,UAAQ,EACRE,SAAUlC,KAAKkC,UAEf,kBAACP,EAAA,EAAKQ,MAAN,CAAYC,QAAM,GAChB,2BAAOnE,UAAU,cACf,2CAGJ,kBAAC0D,EAAA,EAAKQ,MAAN,KACE,kBAACR,EAAA,EAAKW,MAAN,CACEC,MAAOzC,EAAce,SAAS,YAC9B4B,MAAM,WACN/C,KAAK,WACLgD,YAAY,WACZC,SAAU3C,KAAK2C,SACf0D,KAAK,UACLxI,MAAOsI,KAGX,kBAACxE,EAAA,EAAKQ,MAAN,KACE,kBAACR,EAAA,EAAKW,MAAN,CACEC,MAAOzC,EAAce,SAAS,YAC9B4B,MAAM,WACN/C,KAAK,WACLgD,YAAY,WACZjF,KAAK,WACLkF,SAAU3C,KAAK2C,SACf0D,KAAK,UACLxI,MAAOuI,KAGX,kBAACzE,EAAA,EAAKC,OAAN,CACE3D,UAAU,6BACViF,UAAQ,GAFV,mB,GA1FIK,aAgHLC,eAAQ,MAPI,SAAAC,GACzB,MAAO,CACL3F,SAAU,SAAAD,GAAK,OAAI4F,EAAS3F,mBAASD,KACrCE,YAAa,SAAAF,GAAK,OAAI4F,EAAS1F,sBAAYF,QAIhC2F,CAAkC0C,ICjH3CI,G,YACJ,WAAYjH,GAAQ,IAAD,6BACjB,4CAAMA,IAENU,IAAS,gBAHQ,E,oFAOjBC,KAAKX,MAAMtB,YAAY,0B,gCAIvBiC,KAAKX,MAAMY,QAAQC,KAAK,Y,+BAIxB,OACE,yBAAKjC,UAAU,aACb,yBAAKA,UAAU,uBACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC0D,EAAA,EAAKC,OAAN,CACE2E,QAAQ,cACRC,KAAK,aACL1E,QAAS9B,KAAK8B,gB,GAxBLyB,aAsCNC,eAAQ,MANI,SAAAC,GACzB,MAAO,CACL1F,YAAa,SAAAF,GAAK,OAAI4F,EAAS1F,sBAAYF,QAIhC2F,CAAkC8C,IC5B3CG,GAAQC,YAAYX,GAASY,YAAgBC,IAAOC,MAE1DC,IAASC,OACP,kBAAC,IAAD,CAAUN,MAAOA,IACf,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEO,KAAK,SACLC,OAAK,EACLF,OAAQ,gBAAG9G,EAAH,EAAGA,QAAH,OAAkB,kBAAC,GAAD,CAAOA,QAASA,OAE5C,kBAAC,IAAD,CACE+G,KAAK,aACLC,OAAK,EACLF,OAAQ,gBAAG9G,EAAH,EAAGA,QAAH,OAAkB,kBAAC,GAAD,CAAKA,QAASA,OAE1C,kBAAC,IAAD,CACE+G,KAAK,UACLC,OAAK,EACLF,OAAQ,gBAAG9G,EAAH,EAAGA,QAAH,OAAkB,kBAAC,GAAD,CAAQA,QAASA,UAKnDiH,SAASC,eAAe,W","file":"static/js/main.3985e711.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pizza3.0ec0e62f.png\";","const setPizzas = data => ({ type: 'SET_PIZZAS', payload: data });\nconst addPizza = data => ({ type: 'ADD_PIZZA', payload: data });\nconst setIsPizzaLoaderShown = value => ({ type: 'SET_IS_PIZZA_LOADER_SHOWN', payload: value });\nconst addAlert = value => ({ type: 'ADD_ALERT', payload: value });\nconst removeAlert = value => ({ type: 'REMOVE_ALERT', payload: value });\n\nmodule.exports = {\n  setPizzas,\n  addPizza,\n  setIsPizzaLoaderShown,\n  addAlert,\n  removeAlert\n};\n","import React from 'react';\nimport pizza from '../../assets/images/pizza3.png';\n\nconst Header = () => {\n  return (\n    <>\n      <header className='App-header'>\n        <img src={pizza} className='App-logo' alt='logo' />\n        <h1 className='app-name'>Pizza Pals</h1>\n      </header>\n    </>\n  );\n};\n\nexport default Header;\n","export const apiBaseUrl = (() => 'http://localhost:8080')();\n\nexport const pizzaFetchFailureAlert = (() => {\n  return {\n    id: 'pizza-fetch-failure-alert',\n    color: 'red',\n    header: 'Unable to fetch pizzas. Please try again later.',\n    list: []\n  };\n})();\n\nexport const pizzaSubmissionSuccessAlert = (() => {\n  return {\n    id: 'pizza-submission-success-alert',\n    color: 'green',\n    header: 'Pizza created successfully.',\n    list: []\n  };\n})();\n\nexport const pizzaSubmissionFailureAlert = (() => {\n  return {\n    id: 'pizza-submission-failure-alert',\n    color: 'red',\n    header: 'Unable to create pizza. Please try again later.',\n    list: []\n  };\n})();\n\nexport const logoutSuccessAlert = (() => {\n  return {\n    id: 'logout-success-alert',\n    color: 'green',\n    header: 'Logout successful. Goodbye!',\n    list: []\n  };\n})();\n\n\nexport const employees = (() => ([\n  'Ahamed Abbas',\n  'Mcvvina Lin',\n  'Kathy Wong',\n  'Sahu Kumarsneh',\n  'Raji Indukuru',\n  'Surya Saripalli',\n  'Boris Doley',\n  'Anant Dubey',\n  'Alisha Sahu',\n  'Pushparaj Geravubana',\n  'Vikyanth Sudhakar',\n]))();\n","import axios from 'axios';\nimport { apiBaseUrl } from '../constants';\n\nconst createPizza = async pizza => {\n  try {\n    const response = await axios.post(apiBaseUrl + '/api/v1/pizzas', pizza);\n\n    return response.data;\n  } catch(E) {\n    return null;\n  }\n};\n\nexport default createPizza;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Form, Segment } from 'semantic-ui-react';\nimport autoBind from 'react-autobind';\nimport { addPizza, addAlert, removeAlert } from '../../actions/index.js';\nimport { employees, pizzaSubmissionSuccessAlert, pizzaSubmissionFailureAlert, logoutSuccessAlert } from '../../constants';\nimport { getPizzaFormAlertsList } from '../../utilities';\nimport createPizza from '../../services/createPizza';\n\nclass NewPizzaForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isLoaderShown: false,\n      pizza: {\n        ingredient1: '',\n        ingredient2: '',\n        name: '',\n        style: '',\n        creator: '',\n        imageURL: ''\n      },\n      invalidFields: []\n    };\n\n    autoBind(this);\n  }\n\n  componentWillUnmount() {\n   this.props.addAlert(logoutSuccessAlert);\n  }\n\n  onClick() {\n    this.props.history.push('logout');\n  }\n\n  onChange(event, { name, value }) {\n    this.setState(prevState => {\n      return {\n        pizza: {\n          ...prevState.pizza,\n          [name]: value\n        }\n      };\n    });\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n    const invalidFields = this.performValidation();\n\n    if (invalidFields.length) {\n      this.setState({ invalidFields }, () => {\n        this.props.removeAlert('pizza-form-invalid-fields-alert');\n        this.props.removeAlert('pizza-submission-success-alert');\n        this.props.removeAlert('pizza-submission-failure-alert');\n        this.props.addAlert(getPizzaFormAlertsList(invalidFields));\n      });\n    } else {\n      this.props.removeAlert('pizza-form-invalid-fields-alert');\n      this.props.removeAlert('pizza-submission-success-alert');\n      this.props.removeAlert('pizza-submission-failure-alert');\n      this.prePizzaCreationProcess();\n    }\n  }\n\n  performValidation() {\n    const invalidFields = [];\n    const { pizza } = this.state;\n    const fields = ['ingredient1', 'ingredient2', 'name', 'style', 'creator'];\n\n    for (const key in pizza) {\n      const value = pizza[key];\n\n      if (fields.includes(key) && (!value || value.length > 50)) {\n        invalidFields.push(key);\n      } else if (key === 'imageURL' && (!value || value.length > 2083)) {\n        invalidFields.push(key);\n      }\n    }\n\n    return invalidFields;\n  }\n\n  handleLoaderToggle(callback, callbackArgs) {\n    this.setState(prevState => ({ isLoaderShown: !prevState.isLoaderShown }), () => callback(callbackArgs));\n  }\n\n  prePizzaCreationProcess() {\n    this.handleLoaderToggle(this.createPizza);\n  }\n\n  async createPizza() {\n    const { pizza } = this.state;\n\n    const formattedData = {\n      name: pizza.name,\n      style: pizza.style,\n      creator: pizza.creator,\n      imageURL: pizza.imageURL,\n      ingredients: [{ name: pizza.ingredient1 }, { name: pizza.ingredient2 }]\n    };\n    const data = await createPizza(formattedData);\n    this.handleLoaderToggle(this.postPizzaCreationProcess, data);\n  }\n\n  postPizzaCreationProcess(data) {\n    if (data) {\n      this.props.addAlert(pizzaSubmissionSuccessAlert);\n      this.props.addPizza(data);\n      this.clearForm();\n      setTimeout(() => this.props.removeAlert('pizza-submission-success-alert'), 3000);\n    } else {\n      this.props.addAlert(pizzaSubmissionFailureAlert);\n    }\n  }\n\n  clearForm() {\n    this.setState({\n      pizza: {\n        ingredient1: '',\n        ingredient2: '',\n        name: '',\n        style: '',\n        creator: '',\n        imageURL: ''\n      },\n      invalidFields: []\n    });\n  }\n\n  static generateOptions() {\n    return employees.map((employeeName, idx) => ({key: idx, value: employeeName, text: employeeName}));\n  }\n\n  render() {\n    const { isLoaderShown, pizza, invalidFields } = this.state;\n\n    return (\n      <>\n        <div className='row'>\n          <div className=\"col-2 offset-10\">\n            <Form.Button\n              className='logout-button'\n              negative\n              onClick={this.onClick}\n            >\n              Log out\n            </Form.Button>\n          </div>\n        </div>\n        <Segment inverted>\n          <Form\n            inverted\n            loading={isLoaderShown}\n            onSubmit={this.onSubmit}\n          >\n            <Form.Group inline>\n              <label className='form-title'>\n                <strong>Create a Pizza</strong>\n              </label>\n            </Form.Group>\n            <Form.Group widths='equal'>\n              <Form.Input\n                error={invalidFields.includes(\"ingredient1\")}\n                fluid\n                label='Ingredient Name'\n                name='ingredient1'\n                placeholder='First Ingredient'\n                onChange={this.onChange}\n                value={pizza.ingredient1}\n              />\n              <Form.Input\n                error={invalidFields.includes(\"ingredient2\")}\n                fluid\n                label='Ingredient Name'\n                name='ingredient2'\n                placeholder='Second Ingredient'\n                onChange={this.onChange}\n                value={pizza.ingredient2}\n              />\n            </Form.Group>\n            <Form.Group widths='equal'>\n              <Form.Input\n                error={invalidFields.includes(\"name\")}\n                fluid\n                label='Name'\n                name='name'\n                placeholder='Name'\n                onChange={this.onChange}\n                value={pizza.name}\n              />\n              <Form.Input\n                error={invalidFields.includes(\"style\")}\n                fluid\n                label='Style'\n                name='style'\n                placeholder='Style'\n                onChange={this.onChange}\n                value={pizza.style}\n              />\n              <Form.Field\n                error={invalidFields.includes(\"creator\")}\n                fluid\n                control={Form.Select}\n                label='Creator'\n                name='creator'\n                placeholder='Creator'\n                value={pizza.creator}\n                options={NewPizzaForm.generateOptions()}\n                onChange={(event, { name, value }) => this.onChange(event, { name, value })}\n              />\n              <Form.Input\n                error={invalidFields.includes(\"imageURL\")}\n                fluid\n                label='image URL'\n                name='imageURL'\n                placeholder='Image URL'\n                onChange={this.onChange}\n                value={pizza.imageURL}\n              />\n            </Form.Group>\n            <Form.Button\n              disabled={isLoaderShown}\n              positive\n            >\n              Add Pizza\n            </Form.Button>\n          </Form>\n        </Segment>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addPizza: (data) => (dispatch(addPizza(data))),\n    addAlert: value => dispatch(addAlert(value)),\n    removeAlert: value => dispatch(removeAlert(value))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(NewPizzaForm);\n","export const getPizzaFormAlertsList = fields => {\n  const $fields = ['ingredient1', 'ingredient2', 'name', 'style', 'creator'];\n  const alertList = fields.map(field => {\n    if ($fields.includes(field)) {\n      return `${field[0].toUpperCase()}${field.slice(1)} field should include at least one character and should not exceed 50 characters.`;\n    } else {\n      return `${field[0].toUpperCase()}${field.slice(1)} field should include at least one character and should not exceed 2083 characters.`;\n    }\n  });\n\n  return {\n    id: 'pizza-form-invalid-fields-alert',\n    color: 'red',\n    header: 'There was some errors with your submission',\n    list: alertList\n  };\n};\n\nexport const getLoginFormAlertsList = fields => {\n  const alertList = fields.map(field => `${field[0].toUpperCase()}${field.slice(1)} field cannot be empty.`);\n\n  return {\n    id: 'login-form-invalid-fields-alert',\n    color: 'red',\n    header: 'There was some errors with your submission',\n    list: alertList\n  };\n};","import React, { Fragment } from 'react';\nimport { Card, Image } from 'semantic-ui-react';\nimport moment from 'moment';\n\nconst Pizza = (props) => {\n  const { pizza } = props;\n  const ingredients = pizza.ingredients.map(ingredient => ingredient.name).join(' & ');\n\n  return (\n    <Fragment>\n      <Card className='column'>\n        <Image\n          src={pizza.imageURL}\n          className='image'\n        />\n        <Card.Content>\n          <Card.Header>{pizza.name}</Card.Header>\n          <Card.Meta>\n            <span>{pizza.creator}</span>\n          </Card.Meta>\n          <Card.Description>{`You better get ${pizza.creator.split(' ')[0]}'s pizza right!.`}</Card.Description>\n        </Card.Content>\n        <Card.Content extra>{`Ingredients are: ${ingredients}`}</Card.Content>\n        <Card.Content>\n          {moment(pizza.createdTime).format('LLL')}\n        </Card.Content>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default Pizza;\n","import React from 'react';\nimport { Loader, Segment } from 'semantic-ui-react'\nimport { connect } from 'react-redux';\nimport Pizza from './Pizza';\n\nconst PizzaList = props => {\n  console.log(\"pizzalist\");\n  return (\n    <div className='mt-3'>\n      <Segment inverted>\n        <Loader active={props.isPizzaLoaderShown} />\n        {\n          props.pizzas.length ?\n            <div className='ui three doubling stackable cards'>\n              {\n                props.pizzas.map((pizzaObj, idx) => {\n                  return <Pizza key={idx} pizza={pizzaObj}/>\n                })\n              }\n            </div>\n            :\n            null\n        }\n      </Segment>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    pizzas: state.pizzas,\n    isPizzaLoaderShown: state.isPizzaLoaderShown\n  };\n};\n\nexport default connect(mapStateToProps)(PizzaList);\n","import axios from 'axios';\nimport { apiBaseUrl } from \"../constants\";\n\nconst getPizzas = async () => {\n try {\n   const response = await axios.get(apiBaseUrl + '/api/v1/pizzas');\n\n   return response.data;\n } catch(E) {\n   return null;\n }\n};\n\nexport default getPizzas;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Message } from 'semantic-ui-react';\nimport { v4 as uuid } from 'uuid';\n\nconst Error = props => {\n  return (\n    props.alerts.map(alert => {\n      return (\n        <Message\n          key={uuid()}\n          color={alert.color}\n          header={alert.header}\n          list={alert.list}\n        />\n      );\n    })\n  );\n};\n\nconst mapStateToProps = state => {\n  return {\n    alerts: state.alerts\n  };\n};\n\nexport default connect(mapStateToProps)(Error);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Header from '../presentationalComponents/Header';\nimport NewPizzaForm from '../presentationalComponents/NewPizzaForm';\nimport PizzaList from '../presentationalComponents/PizzaList';\nimport { setPizzas, setIsPizzaLoaderShown, addAlert } from '../../actions/index.js';\nimport { pizzaFetchFailureAlert } from '../../constants';\nimport getPizzas from '../../services/getPizzas';\nimport Error from '../presentationalComponents/Error';\n\nclass App extends Component {\n  componentDidMount() {\n    this.prePizzaFetchProcess();\n  }\n\n  prePizzaFetchProcess() {\n    this.props.setIsPizzaLoaderShown(true);\n    this.getPizzas();\n  }\n\n  async getPizzas() {\n    const data = await getPizzas();\n    this.postPizzaFetchProcess(data);\n  }\n\n  postPizzaFetchProcess(data) {\n    if (data) {\n      this.props.setIsPizzaLoaderShown(false);\n      const sortedPizzasByCreatedTime = data.sort((pizza1, pizza2) => new Date(pizza2.createdTime) - new Date(pizza1.createdTime))\n      this.props.setPizzas(sortedPizzasByCreatedTime);\n    } else {\n      this.props.setIsPizzaLoaderShown(false);\n      this.props.addAlert(pizzaFetchFailureAlert);\n    }\n  }\n\n  render() {\n    return (\n      <div className='container'>\n        <div className='col-lg-12 col-md-12'>\n          <Header />\n          <Error />\n          <NewPizzaForm history={this.props.history} />\n          <PizzaList />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setPizzas: data => (dispatch(setPizzas(data))),\n    setIsPizzaLoaderShown: value => dispatch(setIsPizzaLoaderShown(value)),\n    addAlert: value => dispatch(addAlert(value))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(App);","const initialState = Object.freeze({\n  pizzas: [],\n  isPizzaLoaderShown: false,\n  alerts: []\n});\n\nconst reducer = (state=initialState, action) => {\n  switch(action.type) {\n    case 'SET_PIZZAS':\n      return { ...state, pizzas: action.payload };\n    case 'ADD_PIZZA':\n      return {...state, pizzas: [action.payload, ...state.pizzas]};\n    case 'SET_IS_PIZZA_LOADER_SHOWN':\n      return {...state, isPizzaLoaderShown: action.payload};\n    case 'ADD_ALERT':\n      return {...state, alerts: [...state.alerts, action.payload]};\n    case 'REMOVE_ALERT':\n      return {...state, alerts: state.alerts.filter(alert => alert.id !== action.payload)};\n    default:\n      return state\n  }\n};\n\nexport default reducer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Header from '../presentationalComponents/Header';\nimport Error from '../presentationalComponents/Error';\nimport { Form, Segment } from 'semantic-ui-react';\nimport autoBind from 'react-autobind';\nimport { addAlert, removeAlert } from '../../actions';\nimport { getLoginFormAlertsList } from '../../utilities';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      userName: '',\n      password: '',\n      invalidFields: []\n    };\n\n    autoBind(this);\n  }\n\n  componentWillUnmount() {\n    this.props.removeAlert('login-form-invalid-fields-alert');\n  }\n\n  onChange(event, { name, value }) {\n    this.setState({\n      [name]: value\n    }, () => console.log(this.state));\n  }\n\n  onSubmit(event) {\n    event.preventDefault();\n    const invalidFields = this.performValidation();\n\n    if (invalidFields.length) {\n      this.setState({\n        invalidFields\n      }, () => {\n        this.props.removeAlert('login-form-invalid-fields-alert');\n        this.props.addAlert(getLoginFormAlertsList(invalidFields));\n      });\n    } else {\n      this.props.history.push('pizzapals');\n    }\n  }\n\n  performValidation() {\n    const invalidFields = [];\n\n    !this.state.userName && invalidFields.push('userName');\n    !this.state.password && invalidFields.push('password');\n\n    return invalidFields;\n  }\n\n  render() {\n    const { userName, password, invalidFields } = this.state;\n\n    return (\n      <div className='container'>\n        <div className='col-lg-12 col-md-12'>\n          <Header />\n          <Error />\n          <div className='row justify-content-center'>\n            <Segment inverted>\n              <Form\n                inverted\n                onSubmit={this.onSubmit}\n              >\n                <Form.Group inline>\n                  <label className='form-title'>\n                    <strong>Login</strong>\n                  </label>\n                </Form.Group>\n                <Form.Group>\n                  <Form.Input\n                    error={invalidFields.includes('userName')}\n                    label='Username'\n                    name='userName'\n                    placeholder='Username'\n                    onChange={this.onChange}\n                    size='massive'\n                    value={userName}\n                  />\n                </Form.Group>\n                <Form.Group>\n                  <Form.Input\n                    error={invalidFields.includes('password')}\n                    label='Password'\n                    name='password'\n                    placeholder='Password'\n                    type='password'\n                    onChange={this.onChange}\n                    size='massive'\n                    value={password}\n                  />\n                </Form.Group>\n                <Form.Button\n                  className='row justify-content-center'\n                  positive\n                >\n                  Submit\n                </Form.Button>\n              </Form>\n            </Segment>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addAlert: value => dispatch(addAlert(value)),\n    removeAlert: value => dispatch(removeAlert(value))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Login);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Form } from 'semantic-ui-react';\nimport autoBind from 'react-autobind';\nimport { removeAlert } from '../../actions';\nimport Error from '../presentationalComponents/Error';\nimport Header from '../presentationalComponents/Header';\n\nclass Logout extends Component {\n  constructor(props) {\n    super(props);\n\n    autoBind(this);\n  }\n\n  componentWillUnmount() {\n    this.props.removeAlert('logout-success-alert');\n  }\n\n  onClick() {\n    this.props.history.push('/login');\n  }\n\n  render() {\n    return (\n      <div className='container'>\n        <div className='col-lg-12 col-md-12'>\n          <Header />\n          <Error />\n          <Form.Button\n            content='Login again'\n            icon='left arrow'\n            onClick={this.onClick}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    removeAlert: value => dispatch(removeAlert(value))\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Logout);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport 'semantic-ui-css/semantic.min.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './assets/styleSheets/index.css';\nimport './assets/styleSheets/App.css';\n\nimport App from './components/containerComponents/App';\nimport reducer from './reducers/index.js';\nimport Login from './components/containerComponents/Login';\nimport Logout from './components/containerComponents/Logout';\n\nconst store = createStore(reducer, applyMiddleware(thunk, logger));\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <Switch>\n        <Route\n          path='/login'\n          exact\n          render={({ history }) => (<Login history={history} />)}>\n        </Route>\n        <Route\n          path='/pizzapals'\n          exact\n          render={({ history }) => (<App history={history} />)}>\n        </Route>\n        <Route\n          path='/logout'\n          exact\n          render={({ history }) => (<Logout history={history} />)}>\n        </Route>\n      </Switch>\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}