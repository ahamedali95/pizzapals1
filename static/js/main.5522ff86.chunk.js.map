{"version":3,"sources":["assets/images/pizza.png","components/presentationalComponents/Header.js","components/presentationalComponents/NewPizzaForm.js","components/presentationalComponents/Pizza.js","components/presentationalComponents/PizzaList.js","components/containerComponents/App.js","reducers/index.js","index.js","actions/index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","src","pizza","alt","NewPizzaForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","ingredient1","ingredient2","name","style","creator","URL","autoBind","assertThisInitialized","event","_ref","value","undefined","target","setState","defineProperty","data","ingredients","addPizza","clearForm","map","employeeName","idx","key","text","_this2","Form","id","onSubmit","Group","inline","widths","Input","fluid","label","placeholder","onChange","Field","control","Select","options","generateOptions","_ref2","Button","positive","React","Component","connect","dispatch","Pizza","console","log","react","Card","Image","Content","Meta","extra","concat","color","pizzas","pizzaObj","presentationalComponents_Pizza","App","setPizzas","presentationalComponents_Header","presentationalComponents_NewPizzaForm","presentationalComponents_PizzaList","initialState","freeze","reducer","arguments","length","action","type","objectSpread","payload","toConsumableArray","store","createStore","ReactDOM","render","es","containerComponents_App","document","getElementById"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,oRCczBC,EAXA,WACb,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAChBH,EAAAC,EAAAC,cAAA,OAAKE,IAAKC,IAAOF,UAAU,WAAWG,IAAI,SAC1CN,EAAAC,EAAAC,cAAA,sFCAFK,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAEDQ,MAAQ,CACXC,YAAa,GACbC,YAAa,GACbC,KAAM,GACNC,MAAO,GACPC,QAAS,GACTC,IAAK,IAGPC,IAASb,OAAAc,EAAA,EAAAd,QAAAc,EAAA,EAAAd,CAAAD,KAZQA,wEAeVgB,KAAwB,IAAfN,EAAeO,EAAfP,KAAMQ,EAASD,EAATC,WACKC,IAAvBH,EAAMI,OAAOF,MACff,KAAKkB,SAALpB,OAAAqB,EAAA,EAAArB,CAAA,GACGS,EAAOQ,IAGVf,KAAKkB,SAALpB,OAAAqB,EAAA,EAAArB,CAAA,GACGe,EAAMI,OAAOV,KAAOM,EAAMI,OAAOF,yCAK/BF,GAgBP,IAAMO,EAAO,CAAEb,KAAMP,KAAKI,MAAMG,KAAMC,MAAOR,KAAKI,MAAMI,MAAOC,QAAST,KAAKI,MAAMK,QAASC,IAAKV,KAAKI,MAAMM,IAAKW,YAAa,CAACrB,KAAKI,MAAMC,YAAaL,KAAKI,MAAME,cAClKN,KAAKJ,MAAM0B,SAASF,GACpBpB,KAAKuB,gDAILvB,KAAKkB,SAAS,CACZb,YAAa,GACbC,YAAa,GACbC,KAAM,GACNC,MAAO,GACPC,QAAS,GACTC,IAAK,+CAOP,MAFkB,CAAC,eAAgB,aAAc,iBAAkB,gBAAiB,kBAAmB,kBAAmB,mBAAoB,cAAe,cAAe,cAAe,uBAAwB,oBAAqB,qBAEvNc,IAAI,SAACC,EAAcC,GAAf,MAAwB,CAACC,IAAKD,EAAKX,MAAOU,EAAcG,KAAMH,sCAG5E,IAAAI,EAAA7B,KACP,OACEZ,EAAAC,EAAAC,cAACwC,EAAA,EAAD,CAAMC,GAAG,OAAOC,SAAUhC,KAAKgC,UAC7B5C,EAAAC,EAAAC,cAACwC,EAAA,EAAKG,MAAN,CAAYC,QAAM,GAChB9C,EAAAC,EAAAC,cAAA,SAAOyC,GAAG,cAAa3C,EAAAC,EAAAC,cAAA,kCAEzBF,EAAAC,EAAAC,cAACwC,EAAA,EAAKG,MAAN,CAAYE,OAAO,SACjB/C,EAAAC,EAAAC,cAACwC,EAAA,EAAKM,MAAN,CAAYC,OAAK,EAACC,MAAM,kBAAkBC,YAAY,mBAAmBhC,KAAK,cAAcQ,MAAOf,KAAKI,MAAMC,YAAamC,SAAUxC,KAAKwC,WAC1IpD,EAAAC,EAAAC,cAACwC,EAAA,EAAKM,MAAN,CAAYC,OAAK,EAACC,MAAM,kBAAkBC,YAAY,oBAAoBhC,KAAK,cAAcQ,MAAOf,KAAKI,MAAME,YAAakC,SAAUxC,KAAKwC,YAE7IpD,EAAAC,EAAAC,cAACwC,EAAA,EAAKG,MAAN,CAAYE,OAAO,SACjB/C,EAAAC,EAAAC,cAACwC,EAAA,EAAKM,MAAN,CAAYG,YAAY,OAAOhC,KAAK,OAAOQ,MAAOf,KAAKI,MAAMG,KAAMiC,SAAUxC,KAAKwC,WAClFpD,EAAAC,EAAAC,cAACwC,EAAA,EAAKM,MAAN,CAAYG,YAAY,QAAQhC,KAAK,QAAQQ,MAAOf,KAAKI,MAAMI,MAAOgC,SAAUxC,KAAKwC,WACrFpD,EAAAC,EAAAC,cAACwC,EAAA,EAAKW,MAAN,CAAYF,YAAY,UAAUhC,KAAK,UAAUQ,MAAOf,KAAKI,MAAMK,QAASiC,QAASZ,IAAKa,OAAQC,QAAS5C,KAAK6C,kBAAmBL,SAAU,SAAC3B,EAADiC,GAAA,IAAUvC,EAAVuC,EAAUvC,KAAMQ,EAAhB+B,EAAgB/B,MAAhB,OAA4Bc,EAAKW,SAAS3B,EAAO,CAAEN,OAAMQ,aACtM3B,EAAAC,EAAAC,cAACwC,EAAA,EAAKM,MAAN,CAAYG,YAAY,YAAYhC,KAAK,MAAMQ,MAAOf,KAAKI,MAAMM,IAAK8B,SAAUxC,KAAKwC,YAEvFpD,EAAAC,EAAAC,cAACwC,EAAA,EAAKiB,OAAN,CAAaC,UAAQ,EAACjB,GAAG,eAAzB,qBAlFmBkB,IAAMC,WA8FlBC,cAAQ,KANI,SAACC,GAC1B,MAAO,CACL9B,SAAU,SAACF,GAAD,OAAWgC,EAAS9B,mBAASF,OAI5B+B,CAAkCxD,8BC1ElC0D,EAzBD,SAACzD,GACb0D,QAAQC,IAAI,QAAS3D,GACrB,IAAMH,EAAQG,EAAMH,MAEpB,OACEL,EAAAC,EAAAC,cAACkE,EAAA,SAAD,KACEpE,EAAAC,EAAAC,cAACmE,EAAA,EAAD,CAAMlE,UAAU,UACdH,EAAAC,EAAAC,cAACoE,EAAA,EAAD,CAAOlE,IAAKC,EAAMiB,IAAKqB,GAAG,UAC1B3C,EAAAC,EAAAC,cAACmE,EAAA,EAAKE,QAAN,KACEvE,EAAAC,EAAAC,cAACmE,EAAA,EAAKtE,OAAN,KAAcM,EAAMc,MACpBnB,EAAAC,EAAAC,cAACmE,EAAA,EAAKG,KAAN,KACExE,EAAAC,EAAAC,cAAA,YAAOG,EAAMgB,WAGjBrB,EAAAC,EAAAC,cAACmE,EAAA,EAAKE,QAAN,CAAcE,OAAK,GAAnB,oBAAAC,OACuBrE,EAAM4B,YAAY,GADzC,MAAAyC,OACgDrE,EAAM4B,YAAY,KAElEjC,EAAAC,EAAAC,cAACmE,EAAA,EAAKE,QAAN,KACEvE,EAAAC,EAAAC,cAACyD,EAAA,EAAD,CAAQhB,GAAG,cAAcgC,MAAM,OAA/B,YCCKZ,cANS,SAAC/C,GACvB,MAAO,CACL4D,OAAQ5D,EAAM4D,SAIHb,CAlBG,SAACvD,GACjB,OACER,EAAAC,EAAAC,cAAA,OAAKyC,GAAG,aAAaxC,UAAU,qCAE3BK,EAAMoE,OAAOxC,IAAI,SAACyC,EAAUvC,GAC1B,OAAOtC,EAAAC,EAAAC,cAAC4E,EAAD,CAAOvC,IAAKD,EAAKjC,MAAOwE,SCEnCE,cACJ,SAAAA,EAAYvE,GAAQ,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAmE,GAAArE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqE,GAAAhE,KAAAH,KACZJ,qFAONI,KAAKJ,MAAMwE,UAAU,qCAIrB,OACEhF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAC+E,EAAD,MACAjF,EAAAC,EAAAC,cAACgF,EAAD,MACAlF,EAAAC,EAAAC,cAACiF,EAAD,cAjBUrB,aA6BHC,cAAQ,KANI,SAACC,GAC1B,MAAO,CACLgB,UAAW,SAAChD,GAAD,OAAWgC,EAASgB,oBAAUhD,OAI9B+B,CAAkCgB,qBCxC3CK,EAAe1E,OAAO2E,OAAO,CACjCT,OAAQ,KAcKU,EAXC,WAAgC,IAA/BtE,EAA+BuE,UAAAC,OAAA,QAAA5D,IAAA2D,UAAA,GAAAA,UAAA,GAAzBH,EAAcK,EAAWF,UAAAC,OAAA,EAAAD,UAAA,QAAA3D,EAC9C,OAAO6D,EAAOC,MACZ,IAAK,aACH,OAAOhF,OAAAiF,EAAA,EAAAjF,CAAA,GAAKM,EAAZ,CAAmB4D,OAAQa,EAAOG,UACpC,IAAK,YACH,OAAOlF,OAAAiF,EAAA,EAAAjF,CAAA,GAAIM,EAAX,CAAkB4D,OAAM,GAAAF,OAAAhE,OAAAmF,EAAA,EAAAnF,CAAMM,EAAM4D,QAAZ,CAAoBa,EAAOG,YACrD,QACE,OAAO5E,YCCP8E,EAAQC,YAAYT,GAE1BU,IAASC,OACPjG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAUJ,MAAOA,GACf9F,EAAAC,EAAAC,cAACiG,EAAD,OAEFC,SAASC,eAAe,2BCf1B1G,EAAOC,QAAU,CACfoF,UAJgB,SAAChD,GAAD,MAAW,CAAE0D,KAAM,aAAcE,QAAS5D,IAK1DE,SAJe,SAACF,GAAD,MAAW,CAAE0D,KAAM,YAAaE,QAAS5D","file":"static/js/main.5522ff86.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pizza.1ca2ef69.png\";","import React from 'react';\nimport pizza from '../../assets/images/pizza.png';\n\nconst Header = () => {\n  return (\n    <div>\n      <header className='App-header'>\n        <img src={pizza} className='App-logo' alt='logo' />\n        <h1>Pizza Pals</h1>\n      </header>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport { Form } from 'semantic-ui-react';\nimport autoBind from 'react-autobind';\n\nimport { addPizza } from '../../actions/index.js';\n\nimport { connect } from 'react-redux';\n\nclass NewPizzaForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ingredient1: '',\n      ingredient2: '',\n      name: '',\n      style: '',\n      creator: '',\n      URL: ''\n    }\n\n    autoBind(this);\n  }\n\n  onChange(event, { name, value }) {\n    if (event.target.value === undefined) {\n      this.setState({\n        [name]: value\n      });\n    } else {\n      this.setState({\n        [event.target.name]: event.target.value\n      })\n    }\n  }\n\n  onSubmit(event) {\n    // event.preventDefault();\n    //\n    // const data = { name: this.state.name, style: this.state.style, creator: this.state.creator, URL: this.state.URL, ingredients: [this.state.ingredient1, this.state.ingredient2] };\n    // fetch('http://localhost:4000/pizzas', {\n    //   method: 'POST',\n    //   headers: {\n    //     'Content-Type': 'application/json'\n    //   },\n    //   body: JSON.stringify(data),\n    // })\n    //  .then(response => response.json())\n    //   .then(data => {\n    //     this.props.addPizza(data);\n    //     this.clearForm();\n    //   });\n    const data = { name: this.state.name, style: this.state.style, creator: this.state.creator, URL: this.state.URL, ingredients: [this.state.ingredient1, this.state.ingredient2] };\n    this.props.addPizza(data);\n    this.clearForm();\n  }\n\n  clearForm() {\n    this.setState({\n      ingredient1: '',\n      ingredient2: '',\n      name: '',\n      style: '',\n      creator: '',\n      URL: ''\n    });\n  }\n\n  generateOptions() {\n    const employees = ['Ahamed Abbas', 'Kathy Wong', 'Sahu Kumarsneh', 'Raji Indukuru', 'Kirill Repnikov', 'Surya Saripalli', 'Nandita Dhakappa', 'Boris Doley', 'Anant Dubey', 'Alisha Sahu', 'Pushparaj Geravubana', 'Vikyanth Sudhakar', 'Joydeep Mukherjee'];\n\n    return employees.map((employeeName, idx) => ({key: idx, value: employeeName, text: employeeName}));\n  }\n\n  render() {\n    return (\n      <Form id='form' onSubmit={this.onSubmit}>\n        <Form.Group inline>\n          <label id='form-title'><strong>Create a Pizza</strong></label>\n        </Form.Group>\n        <Form.Group widths='equal'>\n          <Form.Input fluid label='Ingredient Name' placeholder='First Ingredient' name='ingredient1' value={this.state.ingredient1} onChange={this.onChange} />\n          <Form.Input fluid label='Ingredient Name' placeholder='Second Ingredient' name='ingredient2' value={this.state.ingredient2} onChange={this.onChange} />\n        </Form.Group>\n        <Form.Group widths='equal'>\n          <Form.Input placeholder='Name' name='name' value={this.state.name} onChange={this.onChange} />\n          <Form.Input placeholder='Style' name='style' value={this.state.style} onChange={this.onChange} />\n          <Form.Field placeholder='Creator' name='creator' value={this.state.creator} control={Form.Select} options={this.generateOptions()} onChange={(event, { name, value }) => this.onChange(event, { name, value })} />\n          <Form.Input placeholder='Image URL' name='URL' value={this.state.URL} onChange={this.onChange} />\n        </Form.Group>\n        <Form.Button positive id='form-button'>Add Pizza</Form.Button>\n      </Form>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addPizza: (data) => (dispatch(addPizza(data)))\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(NewPizzaForm);\n","import React, { Fragment } from 'react';\nimport { Card, Icon, Image, Button } from 'semantic-ui-react';\n\nconst Pizza = (props) => {\n  console.log(\"props\", props);\n  const pizza = props.pizza;\n\n  return (\n    <Fragment>\n      <Card className='column'>\n        <Image src={pizza.URL} id='image' />\n        <Card.Content>\n          <Card.Header>{pizza.name}</Card.Header>\n          <Card.Meta>\n            <span>{pizza.creator}</span>\n          </Card.Meta>\n        </Card.Content>\n        <Card.Content extra>\n          {`Ingredients are: ${pizza.ingredients[0]}, ${pizza.ingredients[1]}`}\n        </Card.Content>\n        <Card.Content>\n          <Button id='edit-button' color='red'>Edit</Button>\n        </Card.Content>\n      </Card>\n    </Fragment>\n  );\n}\n\nexport default Pizza;\n","import React from 'react';\nimport Pizza from './Pizza';\nimport { connect } from 'react-redux';\n\nconst PizzaList = (props) => {\n  return (\n    <div id='pizza-list' className='ui three doubling stackable cards'>\n      {\n        props.pizzas.map((pizzaObj, idx) => {\n          return <Pizza key={idx} pizza={pizzaObj} />\n        })\n      }\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    pizzas: state.pizzas\n  };\n}\n\nexport default connect(mapStateToProps)(PizzaList);\n","import React, { Component } from 'react';\nimport '../../assets/styleSheets/App.css';\nimport 'semantic-ui-css/semantic.min.css';\n\nimport Header from '../presentationalComponents/Header';\nimport NewPizzaForm from '../presentationalComponents/NewPizzaForm';\nimport PizzaList from '../presentationalComponents/PizzaList';\nimport { setPizzas } from '../../actions/index.js';\n\nimport { connect } from 'react-redux';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    // fetch('http://localhost:4000/pizzas')\n    //   .then(response => response.json())\n    //     .then(data => this.props.setPizzas(data))\n    this.props.setPizzas([]);\n  }\n\n  render() {\n    return (\n      <div className='App'>\n        <Header />\n        <NewPizzaForm />\n        <PizzaList />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setPizzas: (data) => (dispatch(setPizzas(data)))\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(App);\n\n\nvar config = {}\n","const initialState = Object.freeze({\n  pizzas: []\n});\n\nconst reducer = (state=initialState, action) => {\n  switch(action.type) {\n    case 'SET_PIZZAS':\n      return { ...state, pizzas: action.payload };\n    case 'ADD_PIZZA':\n      return {...state, pizzas: [...state.pizzas, action.payload]};\n    default:\n      return state\n  }\n}\n\nexport default reducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './assets/styleSheets/index.css';\nimport 'semantic-ui-css/semantic.min.css';\n\nimport App from './components/containerComponents/App';\nimport reducer from './reducers/index.js';\n\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n","const setPizzas = (data) => ({ type: 'SET_PIZZAS', payload: data });\nconst addPizza = (data) => ({ type: 'ADD_PIZZA', payload: data });\n\nmodule.exports = {\n  setPizzas,\n  addPizza\n};\n"],"sourceRoot":""}