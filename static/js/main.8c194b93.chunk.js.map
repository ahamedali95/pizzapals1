{"version":3,"sources":["assets/images/pizza.png","components/presentationalComponents/Header.js","components/presentationalComponents/NewPizzaForm.js","components/presentationalComponents/Pizza.js","components/presentationalComponents/PizzaList.js","components/containerComponents/App.js","reducers/index.js","index.js","actions/index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","src","pizza","alt","NewPizzaForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","ingredient1","ingredient2","name","style","creator","URL","autoBind","assertThisInitialized","event","_this2","setState","defineProperty","target","value","console","log","data","ingredients","addPizza","window","clearForm","Form","id","onSubmit","Group","inline","widths","Input","fluid","label","placeholder","onChange","Button","positive","React","Component","connect","dispatch","Pizza","react","Card","Image","Content","Meta","Description","concat","extra","color","pizzas","map","pizzaObj","idx","presentationalComponents_Pizza","key","App","setPizzas","presentationalComponents_Header","presentationalComponents_NewPizzaForm","presentationalComponents_PizzaList","initialState","freeze","reducer","arguments","length","undefined","action","type","objectSpread","payload","toConsumableArray","store","createStore","ReactDOM","render","es","containerComponents_App","document","getElementById"],"mappings":"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","file":"static/js/main.8c194b93.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pizza.1ca2ef69.png\";","import React from 'react';\nimport pizza from '../../assets/images/pizza.png';\n\nconst Header = () => {\n  return (\n    <div>\n      <header className='App-header'>\n        <img src={pizza} className='App-logo' alt='logo' />\n        <h1>Pizza Pals</h1>\n      </header>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport { Form } from 'semantic-ui-react';\nimport autoBind from 'react-autobind';\n\nimport { addPizza } from '../../actions/index.js';\n\nimport { connect } from 'react-redux';\n\nclass NewPizzaForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ingredient1: '',\n      ingredient2: '',\n      name: '',\n      style: '',\n      creator: '',\n      URL: ''\n    }\n\n    autoBind(this);\n  }\n\n  onChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    }, () => console.log(this.state));\n  }\n\n  onSubmit(event) {\n    // event.preventDefault();\n    //\n    // const data = { name: this.state.name, style: this.state.style, creator: this.state.creator, URL: this.state.URL, ingredients: [this.state.ingredient1, this.state.ingredient2] };\n    // fetch('http://localhost:4000/pizzas', {\n    //   method: 'POST',\n    //   headers: {\n    //     'Content-Type': 'application/json'\n    //   },\n    //   body: JSON.stringify(data),\n    // })\n    //  .then(response => response.json())\n    //   .then(data => {\n    //     this.props.addPizza(data);\n    //     this.clearForm();\n    //   });\n    const data = { name: this.state.name, style: this.state.style, creator: this.state.creator, URL: this.state.URL, ingredients: [this.state.ingredient1, this.state.ingredient2] };\n    this.props.addPizza(data);\n    window.data = data;\n    this.clearForm();\n  }\n\n  clearForm() {\n    this.setState({\n      ingredient1: '',\n      ingredient2: '',\n      name: '',\n      style: '',\n      creator: '',\n      URL: ''\n    });\n  }\n\n  render() {\n    return (\n      <Form id='form' onSubmit={this.onSubmit}>\n        <Form.Group inline>\n          <label id='form-title'><strong>Create a Pizza</strong></label>\n        </Form.Group>\n        <Form.Group widths='equal'>\n          <Form.Input fluid label='Ingredient Name' placeholder='First Ingredient' name='ingredient1' value={this.state.ingredient1} onChange={this.onChange} />\n          <Form.Input fluid label='Ingredient Name' placeholder='Second Ingredient' name='ingredient2' value={this.state.ingredient2} onChange={this.onChange} />\n        </Form.Group>\n        <Form.Group widths='equal'>\n          <Form.Input placeholder='Name' name='name' value={this.state.name} onChange={this.onChange} />\n          <Form.Input placeholder='Style' name='style' value={this.state.style} onChange={this.onChange} />\n          <Form.Input placeholder='Creator' name='creator' value={this.state.creator} onChange={this.onChange} />\n          <Form.Input placeholder='Image URL' name='URL' value={this.state.URL} onChange={this.onChange} />\n        </Form.Group>\n        <Form.Button positive id='form-button'>Add Pizza</Form.Button>\n      </Form>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addPizza: (data) => (dispatch(addPizza(data)))\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(NewPizzaForm);\n","import React, { Fragment } from 'react';\nimport { Card, Icon, Image, Button } from 'semantic-ui-react';\n\nconst Pizza = (props) => {\n  console.log(\"props\", props);\n  const pizza = props.pizza;\n\n  return (\n    <Fragment>\n      <Card className='column'>\n        <Image src={pizza.URL} id='image' />\n        <Card.Content>\n          <Card.Header>{pizza.name}</Card.Header>\n          <Card.Meta>\n            <span>{pizza.creator}</span>\n          </Card.Meta>\n          <Card.Description>{`This is some super tasty pizza, especially since ${pizza.creator} made it.`}</Card.Description>\n        </Card.Content>\n        <Card.Content extra>\n          {`Ingredients are: ${pizza.ingredients[0]}, ${pizza.ingredients[1]}`}\n        </Card.Content>\n        <Card.Content>\n          <Button id='edit-button' color='red'>Edit</Button>\n        </Card.Content>\n      </Card>\n    </Fragment>\n  );\n}\n\nexport default Pizza;\n","import React from 'react';\nimport Pizza from './Pizza';\nimport { connect } from 'react-redux';\n\nconst PizzaList = (props) => {\n  return (\n    <div id='pizza-list' className='ui three doubling stackable cards'>\n      {\n        props.pizzas.map((pizzaObj, idx) => {\n          return <Pizza key={idx} pizza={pizzaObj} />\n        })\n      }\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    pizzas: state.pizzas\n  };\n}\n\nexport default connect(mapStateToProps)(PizzaList);\n","import React, { Component } from 'react';\nimport '../../assets/styleSheets/App.css';\nimport 'semantic-ui-css/semantic.min.css';\n\nimport Header from '../presentationalComponents/Header';\nimport NewPizzaForm from '../presentationalComponents/NewPizzaForm';\nimport PizzaList from '../presentationalComponents/PizzaList';\nimport { setPizzas } from '../../actions/index.js';\n\nimport { connect } from 'react-redux';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    // fetch('http://localhost:4000/pizzas')\n    //   .then(response => response.json())\n    //     .then(data => this.props.setPizzas(data))\n    this.props.setPizzas([]);\n  }\n\n  render() {\n    return (\n      <div className='App'>\n        <Header />\n        <NewPizzaForm />\n        <PizzaList />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setPizzas: (data) => (dispatch(setPizzas(data)))\n  };\n}\n\nexport default connect(null, mapDispatchToProps)(App);\n\n\nvar config = {}\n","const initialState = Object.freeze({\n  pizzas: []\n});\n\nconst reducer = (state=initialState, action) => {\n  switch(action.type) {\n    case 'SET_PIZZAS':\n      return { ...state, pizzas: action.payload };\n    case 'ADD_PIZZA':\n      return {...state, pizzas: [...state.pizzas, action.payload]};\n    default:\n      return state\n  }\n}\n\nexport default reducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './assets/styleSheets/index.css';\nimport 'semantic-ui-css/semantic.min.css';\n\nimport App from './components/containerComponents/App';\nimport reducer from './reducers/index.js';\n\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n","const setPizzas = (data) => ({ type: 'SET_PIZZAS', payload: data });\nconst addPizza = (data) => ({ type: 'ADD_PIZZA', payload: data });\n\nmodule.exports = {\n  setPizzas,\n  addPizza\n};\n"],"sourceRoot":""}